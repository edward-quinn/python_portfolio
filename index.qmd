---
title: "Edward B. Quinn, PhD, MPH"
image: edward_quinn_min.jpeg
about:
    template: jolla
    image-width: 20em
    image-shape: round
    links:
    - icon: linkedin
      text: LinkedIn
      href: https://www.linkedin.com/in/edwardbquinn/
    - icon: github
      text: Github
      href: https://github.com/edward-quinn
    - icon: mortarboard-fill
      text: Google Scholar
      href: https://scholar.google.com/citations?hl=en&user=sL13dZIAAAAJ&view_op=list_works&sortby=pubdate
    - icon: envelope
      text: Contact me
      href: mailto:edward.bruce.quinn@gmail.com
---



```{python}
#| include: false

import polars as pl
import matplotlib.pyplot as plt
import seaborn as sns
from datetime import datetime
import numpy as np
from mplstyle import mplstyle_from_brand
from brand_yml import Brand

mplstyle_from_brand("_brand.yml")

```


```{python}
#| include: false

# Define the data
data = {
    "activity": [
        "Graduate Research Assistant", "Graduate Research Assistant", "Human Biomarkers Researcher",
        "Assistant Research Specialist", "M.A. in Medical Anthropology", "Ph.D. in Biological Anthropology",
        "Graduate Research Assistant", "Data Analyst", "Graduate Research Assistant",
        "Senior Data Analyst", "Compliance and Data Officer", "Data Science Consultant",
        "M.P.H. Epidemiology Track"
    ],
    "start_date": [
        "August 2014", "May 2015", "May 2016", "September 2016", "August 2014", "August 2018",
        "August 2018", "June 2021", "August 2018", "March 2023", "May 2024", "May 2024", "August 2019"
    ],
    "end_date": [
        "December 2014", "May 2016", "August 2016", "June 2018", "May 2016", "December 2022",
        "December 2022", "February 2023", "December 2022", "May 2024", "April 2025", "August 2024", "August 2021"
    ],
    "activity_type": [
        "Research", "Research", "Research", "Research", "Education", "Education",
        "Research", "Data Analysis", "Research", "Data Analysis", "Data Analysis", "Data Analysis", "Education"
    ]
}

# Convert to Polars DataFrame and adjust date format
df = pl.DataFrame(data).with_columns([
    (pl.col("start_date") + "-01").str.strptime(pl.Date, "%B %Y-%d", strict=False),
    (pl.col("end_date") + "-01").str.strptime(pl.Date, "%B %Y-%d", strict=False)
]).sort("start_date", descending=True)

# Show the DataFrame
print(df)



```



```{python}
#| echo: false
#| output: true

# Load the brand information to access the palette directly.
brand = Brand.from_yaml("_brand.yml")

# Define colors for each activity type using your brand palette
activity_colors = {
    "Research": brand.color.palette["violet"],
    "Education": brand.color.palette["teal"],      # using the primary teal from your theme
    "Data Analysis": brand.color.palette["red"]
}

# Create figure and axis
fig, ax = plt.subplots(figsize=(10, 6))

# Dictionary to track legend entries (to avoid duplicate labels)
legend_handles = {}

# Generate Gantt bars
for i, row in enumerate(df.iter_rows(named=True)):
    start = row["start_date"]
    end = row["end_date"]
    activity = row["activity"]
    activity_type = row["activity_type"]
    # Use the brand color if available; default to a neutral grey otherwise.
    color = activity_colors.get(activity_type, brand.color.palette.get("grey", "gray"))

    # Add label only once per activity type
    label = activity_type if activity_type not in legend_handles else None
    handle = ax.barh(activity, (end - start).days, left=start, color=color, label=label)
    
    if label:
        legend_handles[activity_type] = handle

# Labels and title
ax.set_title("Research, Data Analysis, and Graduate Education since 2014")
ax.spines["top"].set_visible(False)
ax.spines["right"].set_visible(False)
ax.tick_params(length=0)

# Set x-axis ticks to show years from 2014 to 2025
years = np.arange(2014, 2026, 1)
ax.set_xticks([np.datetime64(str(y)) for y in years])
ax.set_xticklabels(years)

# Add legend
ax.legend(title="")

plt.show()

```

